<!--
~ Copyright (C) 2019 The Android Open Source Project
~
~ Licensed under the Apache License, Version 2.0 (the "License");
~ you may not use this file except in compliance with the License.
~ You may obtain a copy of the License at
~
~      http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing, software
~ distributed under the License is distributed on an "AS IS" BASIS,
~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~ See the License for the specific language governing permissions and
~ limitations under the License.
-->

<resources>

    <!--Typography-->

    <!--Material’s type system supports 13 categories that, when combined, form the typescale. -->
    <!--This typescale is evident in the variety of text styles and sizes that appear on screen, -->
    <!--ranging from body copy to buttons. Type appears across the UI, in places such as in -->
    <!--components and on surfaces.-->

    <!--These styles should be used throughout your app when creating text views so all your -->
    <!--text is consistently styled and easily updated if design or product needs change. Each -->
    <!--style in the type scale can be customized by defining a style and overriding that -->
    <!--style's Material Theme attribute (?textAppearanceHeadline1, ?textAppearanceBody2, etc.) -->
    <!--in your app's theme. In this project, type attributes have already been overridden in -->
    <!--themes.xml and are set to the styles in this file, type.xml. These ?textAppearance* -->
    <!--theme attributes should be used in your layouts to set a TextView’s appearance instead -->
    <!--of fully qualified style references and in favor of manually setting text properties.-->

    <!--Type on Android is themed by defining a custom TextAppearance for each type scale style. -->
    <!--Use standard TextAppearance attributes such as textSize, textColor, fontFamily, -->
    <!--letterSpacing, etc. to define a custom appearance for each and see how they are -->
    <!--applied globally across your app.-->

    <style name="TextAppearance.MyTheme.Headline1" parent="TextAppearance.MaterialComponents.Headline1">
        <item name="android:textSize">@dimen/text_head1</item>
        <item name="android:textColor">@color/slack_black</item>
        <item name="android:fontFamily">@font/roboto_medium</item>
    </style>

    <style name="TextAppearance.MyTheme.Headline2" parent="TextAppearance.MaterialComponents.Headline2">
        <item name="android:textSize">@dimen/text_head2</item>
        <item name="android:textStyle">normal</item>
        <item name="android:textColor">@color/slack_black</item>
        <item name="android:fontFamily">@font/roboto_medium</item>
        <item name="android:textColorLink">@color/hyperlink_enabled</item>
    </style>

    <style name="TextAppearance.MyTheme.Headline3" parent="TextAppearance.MaterialComponents.Headline3">
        <item name="android:textSize">@dimen/text_head3</item>
        <item name="android:textColor">@color/slack_black</item>
        <item name="android:fontFamily">@font/font_roboto_regular</item>
    </style>

    <style name="TextAppearance.MyTheme.Headline4" parent="TextAppearance.MaterialComponents.Headline4">
        <item name="android:textColor">@color/slack_black</item>
        <item name="android:fontFamily">@font/font_roboto_regular</item>
        <item name="android:textSize">32sp</item>
    </style>

    <style name="TextAppearance.MyTheme.Headline5" parent="TextAppearance.MaterialComponents.Headline5">
        <!--Your custom type style here-->
    </style>

    <style name="TextAppearance.MyTheme.Headline6" parent="TextAppearance.MaterialComponents.Headline6">
        <!--Your custom type style here-->
    </style>

    <style name="TextAppearance.MyTheme.Subtitle1" parent="TextAppearance.MaterialComponents.Subtitle1">
        <item name="android:textColor">@color/slack_black</item>
        <item name="android:fontFamily">@font/font_roboto_regular</item>
        <item name="android:textSize">16sp</item>
    </style>

    <style name="TextAppearance.MyTheme.Subtitle2" parent="TextAppearance.MaterialComponents.Subtitle2">
        <!--Your custom type style here-->
    </style>

    <style name="TextAppearance.MyTheme.Body1" parent="TextAppearance.MaterialComponents.Body1">
        <item name="android:textSize">@dimen/text_body_medium</item>
        <item name="android:textColor">@color/slack_black</item>
        <item name="android:fontFamily">@font/font_roboto_regular</item>
        <item name="android:textColorLink">@color/hyperlink_enabled</item>
    </style>

    <style name="TextAppearance.MyTheme.Body2" parent="TextAppearance.MaterialComponents.Body2">
        <item name="android:textSize">@dimen/text_body_small</item>
        <item name="android:textColor">@color/slack_black</item>
        <item name="android:fontFamily">@font/font_roboto_regular</item>
        <item name="android:textColorLink">@color/hyperlink_enabled</item>
    </style>

    <style name="TextAppearance.MyTheme.Button" parent="Widget.MaterialComponents.Button">
        <item name="android:background">@drawable/default_button_selector</item>
        <item name="android:textColor">@color/default_button_text_color</item>
        <item name="android:textAllCaps">false</item>
        <item name="android:textSize">@dimen/text_button</item>
    </style>

    <style name="Button.MyTheme.MaterialButtonOutlinedStyle" parent="Widget.MaterialComponents.Button.OutlinedButton">
        <item name="android:minHeight">48dip</item>
        <item name="android:textColor">@color/dark_green</item>
        <item name="android:background">@drawable/outline_button_background</item>
    </style>

    <style name="TextAppearance.MyTheme.Caption" parent="TextAppearance.MaterialComponents.Caption">
        <!--Your custom type style here-->
    </style>

    <style name="TextAppearance.MyTheme.Overline" parent="TextAppearance.MaterialComponents.Overline">
        <!--Your custom type style here-->
    </style>

</resources>
